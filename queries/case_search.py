from sqlalchemy import select
from sqlalchemy.orm import selectinload
from db.database import SessionLocal, Case
import pandas as pd

def search_cases(df: pd.DataFrame):
    # –í–ê–ñ–õ–ò–í–û: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ .xlsx –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–∏–π.
    # pd.read_excel() –∑ header=0 –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—î –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫, —Ç–æ–º—É –≤—Å—ñ –¥–∞–Ω—ñ –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å —É DataFrame.
    # –Ø–∫—â–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª—É –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —ñ –¥–∞–Ω—ñ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –∑ –¥—Ä—É–≥–æ–≥–æ —Ä—è–¥–∫–∞, —Å–ª—ñ–¥ —è–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ header=None —É read_excel.

    if "case_number" not in df.columns:
        print("‚ùå DataFrame –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ 'case_number'")
        return

    # –û—á–∏—â–µ–Ω–Ω—è: –ø—Ä–æ–±—ñ–ª–∏, \n, \t
    df["case_number"] = df["case_number"].astype(str).str.strip()
    df["case_number"] = df["case_number"].str.replace(r"\s+", "", regex=True)

    case_numbers = df["case_number"].dropna().unique().tolist()
    total = len(case_numbers)

    if total == 0:
        print("‚ùå –ñ–æ–¥–Ω–æ–≥–æ –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Å–ø—Ä–∞–≤–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    print(f"üîç –ü–æ—à—É–∫ {total} —Å–ø—Ä–∞–≤ —É –±–∞–∑—ñ...")

    CHUNK_SIZE = 900
    all_results = []

    with SessionLocal() as session:
        for i in range(0, total, CHUNK_SIZE):
            chunk = case_numbers[i:i + CHUNK_SIZE]
            stmt = (
                select(Case)
                .options(
                    selectinload(Case.court),
                    selectinload(Case.stage)
                )
                .where(Case.case_number.in_(chunk))
            )
            chunk_results = session.execute(stmt).scalars().all()

            for case in chunk_results:
                all_results.append({
                    "case_number": case.case_number,
                    "court": case.court.name if case.court else "‚Äì",
                    "stage": case.stage.name if case.stage else "‚Äì",
                })

    print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(all_results)} –∑–±—ñ–≥—ñ–≤")
    print("üîé –ü–µ—Ä—à—ñ 10 –∑–±—ñ–≥—ñ–≤:")
    for row in all_results[:10]:
        print(f"‚û° {row['case_number']} ({row['court']}, {row['stage']})")