from pathlib import Path
import pandas as pd
from queries.case_search import search_cases

SEARCH_DIR = Path("search_input")

def read_file(path: Path) -> pd.DataFrame | None:
    try:
        if path.suffix.lower() == ".csv":
            try:
                return pd.read_csv(path, encoding="utf-8", on_bad_lines="skip")
            except UnicodeDecodeError:
                return pd.read_csv(path, encoding="cp1251", on_bad_lines="skip")
        elif path.suffix.lower() == ".xlsx":
            return pd.read_excel(path)
        else:
            print(f"‚ùå –ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç: {path.suffix}")
            return None
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É: {e}")
        return None

def choose_file():
    if not SEARCH_DIR.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {SEARCH_DIR} –Ω–µ —ñ—Å–Ω—É—î")
        return

    files = list(SEARCH_DIR.glob("*.csv")) + list(SEARCH_DIR.glob("*.xlsx"))
    if not files:
        print(f"‚ùå –£ –ø–∞–ø—Ü—ñ '{SEARCH_DIR.name}' –Ω–µ–º–∞—î CSV –∞–±–æ XLSX-—Ñ–∞–π–ª—ñ–≤")
        return

    print(f"üìÅ –§–∞–π–ª–∏ —É –ø–∞–ø—Ü—ñ '{SEARCH_DIR.name}':")
    for i, file in enumerate(files, 1):
        print(f"{i}. {file.name}")

    choice = input("–û–±–µ—Ä—ñ—Ç—å –Ω–æ–º–µ—Ä –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É: ").strip()
    try:
        index = int(choice)
        file_path = files[index - 1]
    except (ValueError, IndexError):
        file_path = Path(choice)

    if not file_path.exists():
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    df = read_file(file_path)
    if df is None or df.empty:
        print("‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É –∞–±–æ —Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π")
        return

    # –í–∏–∑–Ω–∞—á–∏–º–æ –∫–æ–ª–æ–Ω–∫—É –∑ –Ω–æ–º–µ—Ä–∞–º–∏ —Å–ø—Ä–∞–≤
    case_column = None
    for col in df.columns:
        if "case" in str(col).lower() and "number" in str(col).lower():
            case_column = col
            break

    # –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏ ‚Äî –≤—ñ–∑—å–º–µ–º–æ –ø–µ—Ä—à—É –∫–æ–ª–æ–Ω–∫—É
    if case_column is None:
        case_column = df.columns[0]

    # –°—Ç–≤–æ—Ä–∏–º–æ –Ω–æ–≤–∏–π DataFrame –∑ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ —Å–ø—Ä–∞–≤
    try:
        df = df[[case_column]].rename(columns={case_column: "case_number"})
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥—ñ–ª–∏—Ç–∏ –∫–æ–ª–æ–Ω–∫—É: {e}")
        return
    print(df["case_number"].tolist())
    search_cases(df)

if __name__ == "__main__":
    choose_file()
